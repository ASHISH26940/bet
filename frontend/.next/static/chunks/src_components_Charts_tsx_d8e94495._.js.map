{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/kai/code/bet/frontend/src/components/Charts.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  TimeScale,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\nimport \"chartjs-adapter-date-fns\";\n\nChartJS.register(\n  LineElement,\n  PointElement,\n  LinearScale,\n  TimeScale,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nexport default function CryptoGraph() {\n  const [dataPoints, setDataPoints] = useState<{ x: number; y: number }[]>([]);\n  const [amount, setAmount] = useState<string>(\"\");\n  const [currentBalance, setCurrentBalance] = useState<number>(0);\n  const [betBalance, setBetBalance] = useState<number>(0);\n\n  const ws = useRef<WebSocket | null>(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"ws://localhost:8080/ws/\");\n\n    ws.current.onmessage = (event) => {\n      const msg = JSON.parse(event.data);\n      if (msg.type === \"price_update\" && msg.usd_value) {\n        setDataPoints((prev) => [\n          ...prev.slice(-100),\n          { x: Date.now(), y: msg.usd_value },\n        ]);\n      }\n\n      if (msg.type === \"cashout_result\") {\n        // Update balances when cashout result is received\n        setCurrentBalance(parseFloat(msg.balance));\n        setBetBalance(msg.usd_amount);\n      }\n    };\n\n    return () => {\n      ws.current?.close();\n    };\n  }, []);\n\n  const startGame = () => {\n    if (!amount) return;\n    ws.current?.send(\n      JSON.stringify({\n        type: \"start\",\n        amount,\n        crypto: \"sol\",\n      })\n    );\n  };\n\n  const stopGame = () => {\n    ws.current?.send(JSON.stringify({ type: \"stop\" }));\n  };\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"flex gap-4 mb-4 items-center\">\n        <input\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          placeholder=\"Enter USD amount\"\n          className=\"px-4 py-2 border rounded w-48\"\n        />\n        <button\n          className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\n          onClick={startGame}\n        >\n          Start\n        </button>\n        <button\n          className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\"\n          onClick={stopGame}\n        >\n          Stop\n        </button>\n      </div>\n\n      <div className=\"mb-4\">\n        <p>Current Balance: ${currentBalance.toFixed(2)}</p>\n        <p>Betted Balance: ${betBalance.toFixed(2)}</p>\n      </div>\n\n      <Line\n        data={{\n          datasets: [\n            {\n              label: \"USD Value Over Time\",\n              data: dataPoints,\n              fill: true,\n              borderColor: \"#4ade80\",\n              backgroundColor: \"rgba(74, 222, 128, 0.2)\",\n              tension: 0.3,\n            },\n          ],\n        }}\n        options={{\n          responsive: true,\n          animation: false,\n          scales: {\n            x: {\n              type: \"time\",\n              time: {\n                unit: \"second\",\n              },\n              title: {\n                display: true,\n                text: \"Time\",\n              },\n            },\n            y: {\n              title: {\n                display: true,\n                text: \"USD Value\",\n              },\n            },\n          },\n        }}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}